@use './styles/mixins' as *; // Import mixins for potential global use

:root {
  // Color Palette: Grayscale Metallic
  --color-background: #1c1c1e; // Very dark gray, almost black
  --color-surface: #2c2c2e;   // Dark gray for surfaces
  --color-primary: #aEaEaE;     // A metallic gray for accents/borders
  --color-text-primary: #f2f2f7; // Off-white for primary text
  --color-text-secondary: #8e8e93; // Lighter gray for secondary text
  --color-glitch-accent: #ff003c; // New variable for glitch effect
  --font-mono: ui-monospace, Menlo, Monaco, 'Cascadia Mono', 'Segoe UI Mono',
    'Roboto Mono', 'Oxygen Mono', 'Ubuntu Monospace', 'Source Code Pro',
    'Fira Mono', 'Droid Sans Mono', 'Courier New', monospace;
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html {
  scroll-behavior: smooth;
}

body {
  position: relative;
  min-height: 100vh;
  background-color: var(--color-background);
  color: var(--color-text-primary);
}

a {
  color: inherit;
  text-decoration: none;
}

a:hover {
    color: var(--color-primary);
    transition: color 0.2s ease-in-out;
}

/* === Styles from Prompt-013 === */

.circuit-bg {
  background-image: linear-gradient(var(--color-primary) 1px, transparent 1px),
                    linear-gradient(to right, var(--color-primary) 1px, transparent 1px);
  background-size: 50px 50px;
  opacity: 0.1;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  pointer-events: none;
}

.glitch {
  position: relative;
}

.glitch::before,
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0.8;
  background: var(--color-background); // Ensure it covers text underneath
}

.glitch::before {
  left: 2px;
  text-shadow: -1px 0 var(--color-glitch-accent);
  animation: glitch-animation 3s infinite linear alternate-reverse;
  clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%); // Use clip-path for better browser support
}

.glitch::after {
  left: -2px;
  text-shadow: -1px 0 var(--color-text-primary);
  animation: glitch-animation2 2s infinite linear alternate-reverse;
  clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%); // Use clip-path for better browser support
}

@keyframes glitch-animation {
  0% { clip-path: inset(42% 0 56% 0); }
  5% { clip-path: inset(12% 0 41% 0); }
  10% { clip-path: inset(48% 0 23% 0); }
  15% { clip-path: inset(62% 0 33% 0); }
  20% { clip-path: inset(91% 0 8% 0); }
  25% { clip-path: inset(34% 0 54% 0); }
  30% { clip-path: inset(2% 0 92% 0); }
  35% { clip-path: inset(49% 0 49% 0); }
  40% { clip-path: inset(8% 0 78% 0); }
  45% { clip-path: inset(43% 0 19% 0); }
  50% { clip-path: inset(69% 0 11% 0); }
  55% { clip-path: inset(17% 0 74% 0); }
  60% { clip-path: inset(92% 0 5% 0); }
  65% { clip-path: inset(55% 0 35% 0); }
  70% { clip-path: inset(10% 0 88% 0); }
  75% { clip-path: inset(78% 0 1% 0); }
  80% { clip-path: inset(33% 0 45% 0); }
  85% { clip-path: inset(99% 0 1% 0); }
  90% { clip-path: inset(67% 0 21% 0); }
  95% { clip-path: inset(22% 0 69% 0); }
  100% { clip-path: inset(4% 0 89% 0); }
}

@keyframes glitch-animation2 {
  0% { clip-path: inset(65% 0 34% 0); }
  5% { clip-path: inset(52% 0 25% 0); }
  10% { clip-path: inset(79% 0 15% 0); }
  15% { clip-path: inset(2% 0 89% 0); }
  20% { clip-path: inset(39% 0 49% 0); }
  25% { clip-path: inset(87% 0 1% 0); }
  30% { clip-path: inset(59% 0 29% 0); }
  35% { clip-path: inset(21% 0 71% 0); }
  40% { clip-path: inset(83% 0 5% 0); }
  45% { clip-path: inset(40% 0 50% 0); }
  50% { clip-path: inset(1% 0 95% 0); }
  55% { clip-path: inset(64% 0 24% 0); }
  60% { clip-path: inset(29% 0 61% 0); }
  65% { clip-path: inset(93% 0 1% 0); }
  70% { clip-path: inset(45% 0 35% 0); }
  75% { clip-path: inset(11% 0 81% 0); }
  80% { clip-path: inset(74% 0 14% 0); }
  85% { clip-path: inset(36% 0 56% 0); }
  90% { clip-path: inset(99% 0 1% 0); }
  95% { clip-path: inset(50% 0 40% 0); }
  100% { clip-path: inset(38% 0 53% 0); }
}

/* === Layout Styles from Prompt-015 === */

.app-container {
  display: flex;
  max-width: 1440px; // Contraint la largeur sur les grands écrans
  margin: 0 auto; // Centre le conteneur
  padding: 0 2rem; // Ajoute un peu d'espace sur les côtés
}

.main-content {
  flex-grow: 1; // Le contenu principal prend tout l'espace restant
  padding: 2rem 0; // Espace en haut et en bas
}
